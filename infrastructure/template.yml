AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  TagEnvironment:
    Type: String
    Default: production
  TagProject:
    Type: String
    Default: devops-na-nuvem
  CertificateArn:
    Type: String
  HostedZoneId:
    Type: String

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub serverless-workshop-lambda-authorizer-${TagEnvironment}
      Runtime: python3.12
      Handler: authorizer.lambda_handler
      Timeout: 30
      Environment:
        Variables:
          COGNITO_USER_POOL_ID: !Ref CognitoUserPool
          COGNITO_REGION: !Ref AWS::Region
      Tags:
        Environment: !Ref TagEnvironment
        Project: !Ref TagProject

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub serverless-workshop-user-pool-${TagEnvironment}
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub serverless-workshop-user-pool-client-${TagEnvironment}
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
  
  CustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !Sub backend-${TagEnvironment}.devopsnanuvemweek.com
      EndpointConfiguration: 
        Types:
          - EDGE
      SecurityPolicy: TLS_1_2

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CustomDomainName.DistributionDomainName
        HostedZoneId: !GetAtt CustomDomainName.DistributionHostedZoneId
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub backend-${TagEnvironment}.devopsnanuvemweek.com
      Type: A